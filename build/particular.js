var m=[];for(let e=0;e<256;e++)m[e]=(e<16?"0":"")+e.toString(16);var tt=1234567,it=Math.PI/180,st=180/Math.PI;function ot(){let e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0,s=Math.random()*4294967295|0;return(m[e&255]+m[e>>8&255]+m[e>>16&255]+m[e>>24&255]+"-"+m[t&255]+m[t>>8&255]+"-"+m[t>>16&15|64]+m[t>>24&255]+"-"+m[i&63|128]+m[i>>8&255]+"-"+m[i>>16&255]+m[i>>24&255]+m[s&255]+m[s>>8&255]+m[s>>16&255]+m[s>>24&255]).toLowerCase()}function S(e,t,i){return Math.max(t,Math.min(i,e))}function et(e,t){return(e%t+t)%t}function at(e,t,i,s,r){return s+(e-t)*(r-s)/(i-t)}function ct(e,t,i){return e!==t?(i-e)/(t-e):0}function rt(e,t,i){return(1-i)*e+i*t}function lt(e,t,i,s){return rt(e,t,1-Math.exp(-i*s))}function ut(e,t=1){return t-Math.abs(et(e,t*2)-t)}function dt(e,t=0,i=1){return e<=t?0:e>=i?1:(e=(e-t)/(i-t),e*e*(3-2*e))}function ft(e,t=0,i=1){return e<=t?0:e>=i?1:(e=(e-t)/(i-t),e*e*e*(e*(e*6-15)+10))}function xt(e,t){return e+Math.floor(Math.random()*(t-e+1))}function yt(e,t){return e+Math.random()*(t-e)}function mt(e){return e*(.5-Math.random())}function pt(e){e!==void 0&&(tt=e);let t=tt+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function zt(e){return e*it}function gt(e){return e*st}function _t(e){return(e&e-1)===0&&e!==0}function wt(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function Mt(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function bt(e,t,i,s,r){let h=Math.cos,u=Math.sin,n=h(i/2),l=u(i/2),o=h((t+s)/2),a=u((t+s)/2),d=h((t-s)/2),f=u((t-s)/2),c=h((s-t)/2),y=u((s-t)/2);switch(r){case"XYX":e.set(n*a,l*d,l*f,n*o);break;case"YZY":e.set(l*f,n*a,l*d,n*o);break;case"ZXZ":e.set(l*d,l*f,n*a,n*o);break;case"XZX":e.set(n*a,l*y,l*c,n*o);break;case"YXY":e.set(l*c,n*a,l*y,n*o);break;case"ZYZ":e.set(l*y,l*c,n*a,n*o);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function St(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function Ct(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return Math.round(e*65535);case Uint8Array:return Math.round(e*255);case Int16Array:return Math.round(e*32767);case Int8Array:return Math.round(e*127);default:throw new Error("Invalid component type.")}}var C={DEG2RAD:it,RAD2DEG:st,generateUUID:ot,clamp:S,euclideanModulo:et,mapLinear:at,inverseLerp:ct,lerp:rt,damp:lt,pingpong:ut,smoothstep:dt,smootherstep:ft,randInt:xt,randFloat:yt,randFloatSpread:mt,seededRandom:pt,degToRad:zt,radToDeg:gt,isPowerOfTwo:_t,ceilPowerOfTwo:wt,floorPowerOfTwo:Mt,setQuaternionFromProperEuler:bt,normalize:Ct,denormalize:St};var w=class{constructor(t=0,i=0,s=0,r=1){this._x=t,this._y=i,this._z=s,this._w=r}static slerp(t,i,s,r){return console.warn("Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),s.slerpQuaternions(t,i,r)}static slerpFlat(t,i,s,r,h,u,n){let l=s[r+0],o=s[r+1],a=s[r+2],d=s[r+3],f=h[u+0],c=h[u+1],y=h[u+2],F=h[u+3];if(n===0){t[i+0]=l,t[i+1]=o,t[i+2]=a,t[i+3]=d;return}if(n===1){t[i+0]=f,t[i+1]=c,t[i+2]=y,t[i+3]=F;return}if(d!==F||l!==f||o!==c||a!==y){let _=1-n,D=l*f+o*c+a*y+d*F,J=D>=0?1:-1,$=1-D*D;if($>Number.EPSILON){let g=Math.sqrt($),O=Math.atan2(g,D*J);_=Math.sin(_*O)/g,n=Math.sin(n*O)/g}let A=n*J;if(l=l*_+f*A,o=o*_+c*A,a=a*_+y*A,d=d*_+F*A,_===1-n){let g=1/Math.sqrt(l*l+o*o+a*a+d*d);l*=g,o*=g,a*=g,d*=g}}t[i]=l,t[i+1]=o,t[i+2]=a,t[i+3]=d}static multiplyQuaternionsFlat(t,i,s,r,h,u){let n=s[r],l=s[r+1],o=s[r+2],a=s[r+3],d=h[u],f=h[u+1],c=h[u+2],y=h[u+3];return t[i]=n*y+a*d+l*c-o*f,t[i+1]=l*y+a*f+o*d-n*c,t[i+2]=o*y+a*c+n*f-l*d,t[i+3]=a*y-n*d-l*f-o*c,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,i,s,r){return this._x=t,this._y=i,this._z=s,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,i){if(!(t&&t.isEuler))throw new Error("Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");let s=t._x,r=t._y,h=t._z,u=t._order,n=Math.cos,l=Math.sin,o=n(s/2),a=n(r/2),d=n(h/2),f=l(s/2),c=l(r/2),y=l(h/2);switch(u){case"XYZ":this._x=f*a*d+o*c*y,this._y=o*c*d-f*a*y,this._z=o*a*y+f*c*d,this._w=o*a*d-f*c*y;break;case"YXZ":this._x=f*a*d+o*c*y,this._y=o*c*d-f*a*y,this._z=o*a*y-f*c*d,this._w=o*a*d+f*c*y;break;case"ZXY":this._x=f*a*d-o*c*y,this._y=o*c*d+f*a*y,this._z=o*a*y+f*c*d,this._w=o*a*d-f*c*y;break;case"ZYX":this._x=f*a*d-o*c*y,this._y=o*c*d+f*a*y,this._z=o*a*y-f*c*d,this._w=o*a*d+f*c*y;break;case"YZX":this._x=f*a*d+o*c*y,this._y=o*c*d+f*a*y,this._z=o*a*y-f*c*d,this._w=o*a*d-f*c*y;break;case"XZY":this._x=f*a*d-o*c*y,this._y=o*c*d-f*a*y,this._z=o*a*y+f*c*d,this._w=o*a*d+f*c*y;break;default:console.warn("Quaternion: .setFromEuler() encountered an unknown order: "+u)}return i!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,i){let s=i/2,r=Math.sin(s);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(s),this._onChangeCallback(),this}setFromRotationMatrix(t){let i=t.elements,s=i[0],r=i[4],h=i[8],u=i[1],n=i[5],l=i[9],o=i[2],a=i[6],d=i[10],f=s+n+d;if(f>0){let c=.5/Math.sqrt(f+1);this._w=.25/c,this._x=(a-l)*c,this._y=(h-o)*c,this._z=(u-r)*c}else if(s>n&&s>d){let c=2*Math.sqrt(1+s-n-d);this._w=(a-l)/c,this._x=.25*c,this._y=(r+u)/c,this._z=(h+o)/c}else if(n>d){let c=2*Math.sqrt(1+n-s-d);this._w=(h-o)/c,this._x=(r+u)/c,this._y=.25*c,this._z=(l+a)/c}else{let c=2*Math.sqrt(1+d-s-n);this._w=(u-r)/c,this._x=(h+o)/c,this._y=(l+a)/c,this._z=.25*c}return this._onChangeCallback(),this}setFromUnitVectors(t,i){let s=t.dot(i)+1;return s<Number.EPSILON?(s=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=s):(this._x=0,this._y=-t.z,this._z=t.y,this._w=s)):(this._x=t.y*i.z-t.z*i.y,this._y=t.z*i.x-t.x*i.z,this._z=t.x*i.y-t.y*i.x,this._w=s),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(S(this.dot(t),-1,1)))}rotateTowards(t,i){let s=this.angleTo(t);if(s===0)return this;let r=Math.min(1,i/s);return this.slerp(t,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,i){return i!==void 0?(console.warn("Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,i)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,i){let s=t._x,r=t._y,h=t._z,u=t._w,n=i._x,l=i._y,o=i._z,a=i._w;return this._x=s*a+u*n+r*o-h*l,this._y=r*a+u*l+h*n-s*o,this._z=h*a+u*o+s*l-r*n,this._w=u*a-s*n-r*l-h*o,this._onChangeCallback(),this}slerp(t,i){if(i===0)return this;if(i===1)return this.copy(t);let s=this._x,r=this._y,h=this._z,u=this._w,n=u*t._w+s*t._x+r*t._y+h*t._z;if(n<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,n=-n):this.copy(t),n>=1)return this._w=u,this._x=s,this._y=r,this._z=h,this;let l=1-n*n;if(l<=Number.EPSILON){let c=1-i;return this._w=c*u+i*this._w,this._x=c*s+i*this._x,this._y=c*r+i*this._y,this._z=c*h+i*this._z,this.normalize(),this._onChangeCallback(),this}let o=Math.sqrt(l),a=Math.atan2(o,n),d=Math.sin((1-i)*a)/o,f=Math.sin(i*a)/o;return this._w=u*d+this._w*f,this._x=s*d+this._x*f,this._y=r*d+this._y*f,this._z=h*d+this._z*f,this._onChangeCallback(),this}slerpQuaternions(t,i,s){return this.copy(t).slerp(i,s)}random(){let t=Math.random(),i=Math.sqrt(1-t),s=Math.sqrt(t),r=2*Math.PI*Math.random(),h=2*Math.PI*Math.random();return this.set(i*Math.cos(r),s*Math.sin(h),s*Math.cos(h),i*Math.sin(r))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,i=0){return this._x=t[i],this._y=t[i+1],this._z=t[i+2],this._w=t[i+3],this._onChangeCallback(),this}toArray(t=[],i=0){return t[i]=this._x,t[i+1]=this._y,t[i+2]=this._z,t[i+3]=this._w,t}fromBufferAttribute(t,i){return this._x=t.getX(i),this._y=t.getY(i),this._z=t.getZ(i),this._w=t.getW(i),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}};w.prototype.isQuaternion=!0;var x=class{constructor(t=0,i=0,s=0){this.x=t,this.y=i,this.z=s}set(t,i,s){return s===void 0&&(s=this.z),this.x=t,this.y=i,this.z=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;case 2:this.z=i;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,i){return i!==void 0?(console.warn("Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,i)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this.z=t.z+i.z,this}addScaledVector(t,i){return this.x+=t.x*i,this.y+=t.y*i,this.z+=t.z*i,this}sub(t,i){return i!==void 0?(console.warn("Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,i)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this.z=t.z-i.z,this}multiply(t,i){return i!==void 0?(console.warn("Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,i)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,i){return this.x=t.x*i.x,this.y=t.y*i.y,this.z=t.z*i.z,this}applyEuler(t){return t&&t.isEuler||console.error("Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(nt.setFromEuler(t))}applyAxisAngle(t,i){return this.applyQuaternion(nt.setFromAxisAngle(t,i))}applyMatrix3(t){let i=this.x,s=this.y,r=this.z,h=t.elements;return this.x=h[0]*i+h[3]*s+h[6]*r,this.y=h[1]*i+h[4]*s+h[7]*r,this.z=h[2]*i+h[5]*s+h[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){let i=this.x,s=this.y,r=this.z,h=t.elements,u=1/(h[3]*i+h[7]*s+h[11]*r+h[15]);return this.x=(h[0]*i+h[4]*s+h[8]*r+h[12])*u,this.y=(h[1]*i+h[5]*s+h[9]*r+h[13])*u,this.z=(h[2]*i+h[6]*s+h[10]*r+h[14])*u,this}applyQuaternion(t){let i=this.x,s=this.y,r=this.z,h=t.x,u=t.y,n=t.z,l=t.w,o=l*i+u*r-n*s,a=l*s+n*i-h*r,d=l*r+h*s-u*i,f=-h*i-u*s-n*r;return this.x=o*l+f*-h+a*-n-d*-u,this.y=a*l+f*-u+d*-h-o*-n,this.z=d*l+f*-n+o*-u-a*-h,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){let i=this.x,s=this.y,r=this.z,h=t.elements;return this.x=h[0]*i+h[4]*s+h[8]*r,this.y=h[1]*i+h[5]*s+h[9]*r,this.z=h[2]*i+h[6]*s+h[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this.z=Math.max(t.z,Math.min(i.z,this.z)),this}clampScalar(t,i){return this.x=Math.max(t,Math.min(i,this.x)),this.y=Math.max(t,Math.min(i,this.y)),this.z=Math.max(t,Math.min(i,this.z)),this}clampLength(t,i){let s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(t,Math.min(i,s)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this.z+=(t.z-this.z)*i,this}lerpVectors(t,i,s){return this.x=t.x+(i.x-t.x)*s,this.y=t.y+(i.y-t.y)*s,this.z=t.z+(i.z-t.z)*s,this}cross(t,i){return i!==void 0?(console.warn("Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,i)):this.crossVectors(this,t)}crossVectors(t,i){let s=t.x,r=t.y,h=t.z,u=i.x,n=i.y,l=i.z;return this.x=r*l-h*n,this.y=h*u-s*l,this.z=s*n-r*u,this}projectOnVector(t){let i=t.lengthSq();if(i===0)return this.set(0,0,0);let s=t.dot(this)/i;return this.copy(t).multiplyScalar(s)}projectOnPlane(t){return j.copy(this).projectOnVector(t),this.sub(j)}reflect(t){return this.sub(j.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){let i=Math.sqrt(this.lengthSq()*t.lengthSq());if(i===0)return Math.PI/2;let s=this.dot(t)/i;return Math.acos(S(s,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){let i=this.x-t.x,s=this.y-t.y,r=this.z-t.z;return i*i+s*s+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,i,s){let r=Math.sin(i)*t;return this.x=r*Math.sin(s),this.y=Math.cos(i)*t,this.z=r*Math.cos(s),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,i,s){return this.x=t*Math.sin(i),this.y=s,this.z=t*Math.cos(i),this}setFromMatrixPosition(t){let i=t.elements;return this.x=i[12],this.y=i[13],this.z=i[14],this}setFromMatrixScale(t){let i=this.setFromMatrixColumn(t,0).length(),s=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=i,this.y=s,this.z=r,this}setFromMatrixColumn(t,i){return this.fromArray(t.elements,i*4)}setFromMatrix3Column(t,i){return this.fromArray(t.elements,i*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,i=0){return this.x=t[i],this.y=t[i+1],this.z=t[i+2],this}toArray(t=[],i=0){return t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t}fromBufferAttribute(t,i,s){return s!==void 0&&console.warn("Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(i),this.y=t.getY(i),this.z=t.getZ(i),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let t=(Math.random()-.5)*2,i=Math.random()*Math.PI*2,s=Math.sqrt(1-t**2);return this.x=s*Math.cos(i),this.y=s*Math.sin(i),this.z=t,this}limit(t=1){this.lengthSq()>t*t&&this.setLength(t)}constrainX(t=0,i=0){this.x<t&&(this.x=t),this.x>i&&(this.x=i)}constrainY(t=0,i=0){this.y<t&&(this.y=t),this.y>i&&(this.y=i)}constrainZ(t=0,i=0){this.z<t&&(this.z=t),this.z>i&&(this.z=i)}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};x.prototype.isVector3=!0;var j=new x,nt=new w;var p=(e,t=1)=>{e.lengthSq()>t*t&&e.setLength(t)},G=(e,t=0,i=0)=>{e.x<t&&(e.x=t),e.x>i&&(e.x=i)},K=(e,t=0,i=0)=>{e.y<t&&(e.y=t),e.y>i&&(e.y=i)},W=(e,t=0,i=0)=>{e.z<t&&(e.z=t),e.z>i&&(e.z=i)},Vt={limit:p,constrainX:G,constrainY:K,constrainZ:W};var z=new x,E=class{constructor({distance:t=50,maxSpeed:i=3,maxForce:s=.05}={}){this.distance=t,this.maxSpeed=i,this.maxForce=s,this.enabled=!0,this.weight=1}apply(t){if(this.enabled){let i=this.align(t);t.addForce(i)}}align(t){z.set(0,0,0);let i=0,s=this.distance*this.distance;for(let r of t.neighbors)if(r!==t){let h=t.distanceToSquared(r);h>0&&h<s&&(z.add(r.getVelocity()),i++)}return i>0&&z.multiplyScalar(1/i),z.lengthSq()>0&&(z.setLength(this.maxSpeed),z.sub(t.getVelocity()),p(z,this.maxForce)),this.weight!==1&&z.multiplyScalar(this.weight),z}};var I=class{constructor({target:t=new x,maxSpeed:i=3.5,maxForce:s=.5,maxDistance:r=100}={}){this.target=t,this.maxSpeed=i,this.maxForce=s,this.maxDistance=r,this.enabled=!0,this.weight=1}apply(t){if(this.enabled){let i=this.seek(t);t.addForce(i)}}seek(t){let i=new x().copy(t);i.sub(this.target);let s=i.length();return s<this.maxDistance?i.setLength(this.maxSpeed*(1-s/this.maxDistance)):i.set(0,0,0),i.sub(t.getVelocity()),p(i,this.maxForce),this.weight!==1&&i.multiplyScalar(this.weight),i}};var q=class{constructor({min:t=new x(-1,-1,-1),max:i=new x(1,1,1)}={}){this.min=t,this.max=i,this.enabled=!0}apply(t){this.enabled&&(t.x<=this.min.x&&(t.x=this.min.x,t.velocity.x*=-1),t.y<=this.min.y&&(t.y=this.min.y,t.velocity.y*=-1),t.z<=this.min.z&&this.min.z!==this.max.z&&(t.z=this.min.z,t.velocity.z*=-1),t.x>=this.max.x&&(t.x=this.max.x,t.velocity.x*=-1),t.y>=this.max.y&&(t.y=this.max.y,t.velocity.y*=-1),t.z>=this.max.z&&this.min.z!==this.max.z&&(t.z=this.max.z,t.velocity.z*=-1),this.min.z===this.max.z&&(t.z=this.max.z,t.velocity.z=0))}};var V=new x,v=new x,P=new x,L=class{constructor({distance:t=50,maxSpeed:i=3,maxForce:s=.05}={}){this.distance=t,this.maxSpeed=i,this.maxForce=s,this.enabled=!0,this.weight=1}apply(t){if(this.enabled){let i=this.cohesion(t);t.addForce(i)}}cohesion(t){V.set(0,0,0);let i=0,s=this.distance*this.distance;for(let r of t.neighbors)if(r!==t){let h=t.distanceToSquared(r);h>0&&h<s&&(V.add(r),i++)}return i>0?(V.multiplyScalar(1/i),this.seek(V,t)):V}seek(t,i){return v.copy(t).sub(i),v.setLength(this.maxSpeed),P.copy(v).sub(i.getVelocity()),p(P,this.maxForce),this.weight!==1&&P.multiplyScalar(this.weight),P}};var k=new x,X=class{constructor({offset:t=0,maxForce:i=.2}={}){this.offset=t,this.maxForce=i,this.enabled=!0,this.weight=1,this.force=new x}apply(t){if(this.enabled){if(t.updateCollisionForce){this.force.set(0,0,0);let i=0,s=this.offset===0?t.radius:t.radius*(1-this.offset);for(let r of t.neighbors)if(r!==t&&!r.noCollision){k.copy(t),k.sub(r);let h=k.lengthSq(),u=s+r.radius;h<u*u&&(k.setLength((u-Math.sqrt(h))/u),this.force.add(k),i++)}i>0&&(this.force.multiplyScalar(1/i),p(this.force,this.maxForce),this.weight!==1&&this.force.multiplyScalar(this.weight))}t.addForce(this.force)}}};var Y=class{constructor({min:t=new x(-1,-1,-1),max:i=new x(1,1,1)}={}){this.min=t,this.max=i,this.enabled=!0}apply(t){this.enabled&&(t.x<=this.min.x&&(t.x=this.min.x),t.y<=this.min.y&&(t.y=this.min.y),t.z<=this.min.z&&(t.z=this.min.z),t.x>=this.max.x&&(t.x=this.max.x),t.y>=this.max.y&&(t.y=this.max.y),t.z>=this.max.z&&(t.z=this.max.z))}};var Q=class extends EventTarget{constructor({target:t=new x,maxSpeed:i=3.5,maxForce:s=.5,minDistance:r=0,slowDownDistance:h=100,easing:u=void 0,arriveEnabled:n=!1,arriveDistance:l=.01}={}){super(),this.target=t,this.maxSpeed=i,this.maxForce=s,this.minDistance=r,this.slowDownDistance=h,this.easing=u,this.arriveEnabled=n,this.arriveDistance=l,this.enabled=!0,this.arrived=!1,this.weight=1,this.seekStarted=!1}apply(t){if(this.enabled){let i=this.seek(t);t.addForce(i)}}seek(t){let i=new x().copy(this.target).sub(t),s=i.length();if(s>this.minDistance){if(s<this.minDistance+this.slowDownDistance){let r=(s-this.minDistance)/this.slowDownDistance;this.easing!==void 0&&this.easing!==null?i.setLength(this.maxSpeed*this.easing(r)):i.setLength(this.maxSpeed*r)}else i.setLength(this.maxSpeed);i.sub(t.getVelocity()),p(i,this.maxForce)}else i.set(0,0,0);if(this.arriveEnabled){let r=s<this.arriveDistance;!r&&(this.arrived||!this.seekStarted)&&(this.dispatchEvent(new Event("start")),this.seekStarted=!0),r&&!this.arrived&&this.dispatchEvent(new Event("arrive")),this.arrived=r}return this.weight!==1&&i.multiplyScalar(this.weight),i}};var T=class{constructor({maxSpeed:t=3.5,maxForce:i=.5,min:s=new x(-10,-10,-10),max:r=new x(10,10,10),minDistance:h=.01,slowDownDistance:u=0}={}){this.maxSpeed=t,this.maxForce=i,this.min=s,this.max=r,this.minDistance=h<i?i:h,this.slowDownDistance=u,this.enabled=!0,this.weight=1,this.setRandomTarget()}apply(t){if(this.enabled){let i=this.seek(t);t.addForce(i)}}seek(t){let i=new x().copy(this.target);i.sub(t);let s=i.length();return s<=this.minDistance?this.setRandomTarget():s<this.slowDownDistance?i.setLength(this.maxSpeed*s/this.slowDownDistance):i.setLength(this.maxSpeed),i.sub(t.getVelocity()),p(i,this.maxForce),this.weight!==1&&i.multiplyScalar(this.weight),i}setRandomTarget(){this.target=new x(C.randFloat(this.min.x,this.max.x),C.randFloat(this.min.y,this.max.y),C.randFloat(this.min.z,this.max.z))}};var Z=new x,U=class{constructor({distance:t=25,maxSpeed:i=3,maxForce:s=.05}={}){this.distance=t,this.maxSpeed=i,this.maxForce=s,this.enabled=!0,this.weight=1}apply(t){if(this.enabled){let i=this.seperate(t);t.addForce(i)}}seperate(t){let i=new x,s=0;for(let r of t.neighbors)if(r!==t){let h=t.distanceTo(r);h>0&&h<this.distance&&(Z.copy(t),Z.sub(r),Z.setLength(1/h),i.add(Z),s++)}return s>0&&i.multiplyScalar(1/s),i.lengthSq()>0&&(i.setLength(this.maxSpeed),i.sub(t.getVelocity()),p(i,this.maxForce)),this.weight!==1&&i.multiplyScalar(this.weight),i}};var B=class{constructor({speed:t=1,maxChange:i=1,maxForce:s=1}={}){this.speed=t,this.maxChange=i,this.maxForce=s,this.wanderVelocity=new x,this.wanderDirection=new x,this.enabled=!0,this.weight=1}apply(t){if(this.enabled){let i=this.wander();t.addForce(i)}}wander(){return this.wanderDirection.normalize(),this.wanderDirection.x+=(Math.random()-.5)*this.maxChange,this.wanderDirection.y+=(Math.random()-.5)*this.maxChange,this.wanderDirection.z+=(Math.random()-.5)*this.maxChange,this.wanderVelocity.set(0,0,0),this.wanderVelocity.add(this.wanderDirection),this.wanderVelocity.multiplyScalar(this.speed),p(this.wanderVelocity,this.maxForce),this.weight!==1&&this.wanderVelocity.multiplyScalar(this.weight),this.wanderVelocity}};var H=class{constructor({min:t=new x(-1,-1,-1),max:i=new x(1,1,1)}={}){this.min=t,this.max=i,this.enabled=!0}apply(t){this.enabled&&(t.x<this.min.x&&(t.x=this.max.x),t.y<this.min.y&&(t.y=this.max.y),t.z<this.min.z&&(t.z=this.max.z),t.x>this.max.x&&(t.x=this.min.x),t.y>this.max.y&&(t.y=this.min.y),t.z>this.max.z&&(t.z=this.min.z))}};var M=class{constructor({neighborRange:t=100}={}){this.neighborRange=t,this.H=new Map,this.particles=new Set}getXr(t){return Math.floor(t.x/this.neighborRange)}getYr(t){return Math.floor(t.y/this.neighborRange)}getKey(t){return this.getXr(t)+"_"+this.getYr(t)}add(t){this.particles.add(t),this.insert(t)}clear(){this.H.clear(),this.particles.clear()}insert(t){let i=this.getKey(t);if(this.H.get(i)===void 0)this.H.set(i,[t]);else{let s=this.H.get(i);s.push(t),this.H.set(i,s)}}updateAll(){this.H.clear();for(let t of this.particles)this.insert(t)}check(t){let i=this.getXr(t),s=this.getYr(t),r=[],h=0;for(let n=i-1;n<=i+1;n++)for(let l=s-1;l<=s+1;l++)r[h++]=n+"_"+l;let u=[];for(h=0;h<r.length;h++)this.H.get(r[h])!==void 0&&(u=u.concat(this.H.get(r[h])));return new Set(u)}delete(t){let i=this.getKey(t);this.H.delete(i),this.particles.delete(t)}size(){return this.H.size}};var N=class extends x{constructor(t=0,i=0,s=0,r=1,h=1){super(t,i,s),this.locked=!1,this.behaviors=null,this.neighbors=null,this.mass=r,this.radius=h,this.friction=0,this.maxSpeed=3,this.force=new x,this.velocity=new x,this.velocitySmooth=new x,this.followers=new Set}addBehavior(t,i=!1){return this.behaviors===null&&(this.behaviors=new Set),(!this.behaviors.has(t)||i)&&this.behaviors.add(t),this}getBehavior(t){if(this.behaviors!==null){for(let i of this.behaviors)if(i instanceof t)return i}return null}addFollower(t){this.followers.add(t)}addForce(t){return this.force.add(t),this}applyBehaviors(){if(this.behaviors!==null)for(let t of this.behaviors)t.apply(this)}applyForce(t){this.velocity.add(this.force.multiplyScalar(Math.min(t,1)/this.mass)),this.velocity.limit(this.maxSpeed),this.add(this.velocity),this.velocitySmooth.lerp(this.velocity,.05),this.force.set(0,0,0)}clearForce(){return this.force.set(0,0,0),this}clearVelocity(){return this.velocity.set(0,0,0),this}getVelocity(){return this.velocity}scaleVelocity(t){return this.velocity.multiplyScalar(t),this}removeBehavior(t){if(this.behaviors!==null){let i=this.behaviors.has(t);return this.behaviors.delete(t),i}else return!1}removeFollower(t){if(this.followers!==null){let i=this.followers.has(t);return this.followers.delete(t),i}else return!1}unlock(){return this.clearVelocity(),this.locked=!1,this}update(t){this.locked||(this.applyBehaviors(),this.applyForce(t)),this.scaleVelocity(1-this.friction);for(let i of this.followers)i.copy(this)}equalsWithTolerance(t,i){let s=this.x-t.x;return!(isNaN(s)||(s<0?-s:s)>i||(s=this.y-t.y,isNaN(s))||(s<0?-s:s)>i||(s=this.z-t.z,isNaN(s))||(s<0?-s:s)>i)}constrainX(t,i){G(this,t,i)}constrainY(t,i){K(this,t,i)}constrainZ(t,i){W(this,t,i)}};var b=class{constructor({friction:t=.95,springIterationsCount:i=50,collisionBatchSize:s=1/0}={}){this.behaviors=new Set,this.constraints=new Set,this.groups=new Set,this.particles=new Set,this.springs=new Set,this.collisionBatchSize=s,this.friction=t,this.springIterationsCount=i,this.collisionStartIndex=0}addBehavior(t){this.behaviors.add(t)}addParticle(t){return this.returnIfConstrained(t)}addSpring(t){return this.getSpring(t.a,t.b)===null&&this.springs.add(t),this}addConstraint(t){return this.constraints.add(t),t}addGroup(t){return this.groups.add(t)}clear(){return this.particles.clear(),this.springs.clear(),this}getParticle(t){return this.returnIfConstrained(t)}getSpring(t,i){for(let s of this.springs)if(s.a===t&&s.b===i||s.a===i&&s.b===t)return s;return null}getnumConnected(t){let i=0;if(this.springs!=null)for(let s of this.springs)(s.a===t||s.b===t)&&i++;return i}hasBehavior(t){return this.behaviors.has(t)}hasConstraint(t){return this.constraints.has(t)}hasGroup(t){return this.groups.has(t)}hasParticle(t){return this.particles.has(t)}hasSpring(t){return this.springs.has(t)}removeBehavior(t){return this.behaviors.delete(t)}removeConstraint(t){return this.constraints.delete(t)}removeParticle(t){return this.particles.delete(t)}removeSpring(t){return this.springs.delete(t)}removeSpringElements(t){return this.removeSpring(t)?this.removeParticle(t.a)&&this.removeParticle(t.b):!1}removeGroup(t){return this.groups.delete(t)}updateParticles(t){let i=0;for(let s of this.particles){s.neighbors===null&&(s.neighbors=this.particles),s.updateCollisionForce=i>=this.collisionStartIndex&&i<this.collisionStartIndex+this.collisionBatchSize;for(let r of this.behaviors)r.apply(s);s.scaleVelocity(1-this.friction),s.update(t),i++}this.particles.size>this.collisionBatchSize&&(this.collisionStartIndex+=this.collisionBatchSize),this.collisionStartIndex>=this.particles.size+this.collisionBatchSize&&(this.collisionStartIndex=0)}updateSprings(t){if(this.springs!==null)for(let i=this.springIterationsCount;i>0;i--)for(let s of this.springs)s.update(t)}update(t=1){if(this.updateParticles(t),this.updateSprings(t),this.groups!==null)for(let i of this.groups)i.update(t)}returnIfConstrained(t){for(let i of this.constraints)if(t.equalsWithTolerance(i,.1))return i;return this.returnIfDuplicate(t)}returnIfDuplicate(t){for(let i of this.particles)if(t===i)return i;return this.particles.add(t),t}};var R=class extends b{constructor(t){let{neighborRange:i=80}=t;super(t),this.hashgrid=new M({neighborRange:i}),this.neighborsCountAverage=0,this.batchSize=100,this.start=0}addParticle(t){let i=super.addParticle(t);return this.hashgrid.add(i),i}clear(){return super.clear(),this.hashgrid.clear(),this}removeParticle(t){return this.hashgrid.delete(t),super.removeParticle(t)}update(t=1){this.hashgrid.updateAll(),this.neighborsCountAverage=0;for(let i of this.particles)i.neighbors=this.hashgrid.check(i),this.neighborsCountAverage+=i.neighbors.size;this.neighborsCountAverage/=this.particles.size,this.neighborsCountAverage=Math.round(this.neighborsCountAverage),super.update(t)}};export{E as Align,I as Avoid,q as Bounce,L as Cohesion,X as Collision,Y as Constrain,R as GridPhysics,M as HashGrid,C as Math2,N as Particle,w as Quaternion,Q as Seek,T as SeekRandom,U as Separate,b as SimplePhysics,Vt as VecUtils,x as Vector3,B as Wander,H as Wrap};
//# sourceMappingURL=particular.js.map
